#+title: Problem Specification and Design Requirements
#+OPTIONS: p:t

* Problem Specification
We must simulate a howitzer shooting a projectile across an empty field. The simulation must accurately account for real physical variables
such as drag force and gravity.

* Design Requirements

** Objectives
1. Demonstrate how different variables, such as the howitzer position and orientation, affect the trajectory and final impact location of a projectile and display the results of each simulation "run" in a way anybody can understand.
**2. Create a robust test suite for parts of the simulator to demonstrate complete knowledge of standard test procedures**, including but not limited to:
    a. Boundary Value Testing
    b. Equivalence Class Testing
    c. Decision Table-Based Testing
    d. Path Testing
    e. Dataflow Testing
    f. Slice Testing
    g. Integration Testing on a subset of units
    h. System Testing on a subset of use cases


** Functions
- Initialize (or re-initialize) the simulation, including variables such as the howitzer position and orientation, the projectile mass and size, and the air density
- "Fire" the projectile and record it's final position relative to the howitzer


** Constraints
#+begin_quote
Consider at least four constraints overarching your design

Economic Factors
Regulatory Compliance (Security and Access)
Reliability
Sustainability and Environmental Factors
Ethics
Societal Impacts
#+end_quote


*** Ethics
This simulator is to be created for the supposed purpose of educating soldiers for combat, which includes the potential destruction of lives and infrastructure. Our hope as a development team is that the education from our simulator is used to strengthen a strategy of combat deterrence and de-escalation, but we clearly and plainly recognize the likelihood of said education to be used towards actual combat. Good thing it's a just school project :P

*** Accuracy
This simulator is a simplified model of actions in the world, and we cannot guarantee that it precisely replicates the real-world-equivalent actions.

*** Reliability
As a simulator, we expect this to be perfectly reliable such that if one or more simulations run with exact same initial conditions, the exact same output will occur.

*** User Control and Display
The simulation will run without a GUI; inputs and outputs are to be managed through external files according to the Information Management constraint. At most, the user input will be a one-time prompt at the program startup. At most, the simulation output may be displayed through the console, but will also be recorded seperately.

*** Information Management
The simulation will be initialized and run according to a config and/or read-in file storing the relevant information. Simulation results will be saved to a write-out file that includes but is not limited to: date & time of the simulation run, the input variables, and the projectile final position. 

It is entirely up to whoever manages the use of the simulation to decide what to do with the files produced by this simulation.